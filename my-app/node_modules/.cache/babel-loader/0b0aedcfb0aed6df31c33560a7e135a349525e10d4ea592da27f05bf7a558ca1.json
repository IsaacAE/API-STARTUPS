{"ast":null,"code":"var _jsxFileName = \"/home/vox/Documentos/IngeSoft/Ing-Software-2024-2/my-app/src/components/Pages/Users/CRUD/R/UserShow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { leerUsuarioPorId, actualizarUsuario } from '../../../../../DataBase/DataOperations.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserDetails() {\n  _s();\n  const {\n    idUsuario\n  } = useParams();\n  const [usuario, setUsuario] = useState({});\n  const [nuevoNombre, setNuevoNombre] = useState('');\n  const [nuevoEmail, setNuevoEmail] = useState('');\n  useEffect(() => {\n    const fetchUsuario = async () => {\n      try {\n        const usuarioData = await leerUsuarioPorId(idUsuario);\n        setUsuario(usuarioData);\n      } catch (error) {\n        console.error('Error al cargar usuario:', error);\n      }\n    };\n    fetchUsuario();\n  }, [idUsuario]);\n  const handleUpdate = async () => {\n    try {\n      await actualizarUsuario(idUsuario, {\n        nombre: nuevoNombre,\n        email: nuevoEmail\n      });\n      alert('Usuario actualizado exitosamente');\n    } catch (error) {\n      console.error('Error al actualizar usuario:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Detalles del Usuario\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"ID del Usuario: \", usuario.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Nombre: \", usuario.nombre]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email: \", usuario.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Nuevo Nombre:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: nuevoNombre,\n        onChange: e => setNuevoNombre(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Nuevo Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: nuevoEmail,\n        onChange: e => setNuevoEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpdate,\n      children: \"Actualizar Usuario\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(UserDetails, \"ygnKmvCxOE0CaQqkXmHdW1eBYgc=\", false, function () {\n  return [useParams];\n});\n_c = UserDetails;\nexport default UserDetails;\nvar _c;\n$RefreshReg$(_c, \"UserDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","leerUsuarioPorId","actualizarUsuario","jsxDEV","_jsxDEV","UserDetails","_s","idUsuario","usuario","setUsuario","nuevoNombre","setNuevoNombre","nuevoEmail","setNuevoEmail","fetchUsuario","usuarioData","error","console","handleUpdate","nombre","email","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","id","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/vox/Documentos/IngeSoft/Ing-Software-2024-2/my-app/src/components/Pages/Users/CRUD/R/UserShow.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { leerUsuarioPorId, actualizarUsuario } from '../../../../../DataBase/DataOperations.js';\n\nfunction UserDetails() {\n  const { idUsuario } = useParams();\n  const [usuario, setUsuario] = useState({});\n  const [nuevoNombre, setNuevoNombre] = useState('');\n  const [nuevoEmail, setNuevoEmail] = useState('');\n\n  useEffect(() => {\n    const fetchUsuario = async () => {\n      try {\n        const usuarioData = await leerUsuarioPorId(idUsuario);\n        setUsuario(usuarioData);\n      } catch (error) {\n        console.error('Error al cargar usuario:', error);\n      }\n    };\n\n    fetchUsuario();\n  }, [idUsuario]);\n\n  const handleUpdate = async () => {\n    try {\n      await actualizarUsuario(idUsuario, { nombre: nuevoNombre, email: nuevoEmail });\n      alert('Usuario actualizado exitosamente');\n    } catch (error) {\n      console.error('Error al actualizar usuario:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Detalles del Usuario</h2>\n      <p>ID del Usuario: {usuario.id}</p>\n      <p>Nombre: {usuario.nombre}</p>\n      <p>Email: {usuario.email}</p>\n      <label>\n        Nuevo Nombre:\n        <input type=\"text\" value={nuevoNombre} onChange={(e) => setNuevoNombre(e.target.value)} />\n      </label>\n      <label>\n        Nuevo Email:\n        <input type=\"text\" value={nuevoEmail} onChange={(e) => setNuevoEmail(e.target.value)} />\n      </label>\n      <button onClick={handleUpdate}>Actualizar Usuario</button>\n    </div>\n  );\n}\n\nexport default UserDetails;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}